######################################################################
# Autor: Радимир Михайлов (radimir@mobilcard.ru)
# Descr: Файл описания установки системы синхронизации
# -------------------------------------------------------------------
# $Id $
# -------------------------------------------------------------------
######################################################################

Состав системы
--------------

Все необходимые файлы и каталоги размещаются в домашнем каталоге
пользователя sync.

  archive           - команда архивирования пакетов
  syncctl           - программа синхронизации
  nodeconf          - скрипт получения информации об узлах из конф. файла
  etc/sync.conf	    - конфигурационный файл системы синхронизации
  etc/nodes.conf    - конфигурационный файл удаленных узлов
  etc/nodes.sec     - конфигурационный файл уровней безопасности пакетов
  etc/common        - общие параметры, процедуры и функции
  etc/sybase.sql    - все SQL-выражения используемые в системе
  etc/profiles\*    - файлы-шаблоны для трех профилей системы:
                        azs    - для использования системы на АЗС
                        office - для использования системы в оперцентре
                        center - для использования системы в клиринговом
                                 центре
  doc\changelog.txt - история изменений системы
  doc\todo.txt      - список будущих изменений системы
  doc\readme.txt    - этот текст

В базу данных устанавливается система под пользователем, который
устанавливает соединение с БД в программе, указанной в SQL_EXEC.


Список используемых утилит
--------------------------

  awk
  cat
  cksum
  expr
  gpg
  gzip
  printf
  sed
  sort
  tar
  touch
  tr
  zcat


Дерево каталогов
----------------

   /home/sync/          - домашний каталог системы
       nodes/           - общий каталог для данных всех удаленных узлов
           node1/       - данные, относящиеся к удаленному узлу node1
               inbox/   - входящие сообщения (что пришло с узла)
               outbox/  - исходящие сообщения (что должно уйти на узел)
           node2/
               inbox/
               outbox/
           ...
        arch/               - архив пакетов
               inbox/       - для входящих пакетов
                 node1/     - пакеты, пришедшие с удаленного узла node1
                   YYYY.MM/   Пакеты разносятся по разным каталогам,
                 node2/       в зависимости от даты обработки пакетов.
                   YYYY.MM/
                 ...
               outbox/      - для исходящих пакетов
                 node1/     - пакеты, пришедшие с удаленного узла node1
                   YYYY.MM/   Пакеты разносятся по разным каталогам,
                 node2/       в зависимости от даты создания пакетов.
                   YYYY.MM/
                 ...

Например, если имеются два узла barnaul и azs1, которые взаимно
обмениваются информацией, то потоки информации между каталогами
можно отобразить следующим образом:

          Узел barnaul      |           Узел azs1
 ---------------------------|--------------------------------
   /home/sync/              |                    /home/sync/
     nodes/                 |                  nodes/
       azs1/                |              barnaul/
 ------  inbox/    <----- пакеты -----    outbox/ -------
 | ----  outbox/    ----- пакеты ----->   inbox/  ----- |
 | |                        |                         | |
 | | arch/                  |                  arch/  | |
 | |   inbox/               |               inbox/    | |
 | |     azs1/              |            barnaul/     | |
 |-------> 2003.04/         |          2003.04/ <-----| |
   |   outbox/              |               outbox/     |
   |     azs1/              |            barnaul/       |
   |-----> 2003.04/         |          2003.04/ <-------|


Содержимое каталога определенного узла
--------------------------------------

     node1/
         .connect            - параметры соединения с узлом
         .prepare.sql        - закэшированный SQL-скрипт подготовки
                               данных для узла
         .update.sql         - закэшированный SQL-скрипт обработки
                               данных с узла
         inbox/
             pkt-0000001.tgz - файлы-пакеты, пришедшие с удаленного узла
             pkt-0000002.tgz   и еще не обработанные
         outbox/
             pkt-0000001.tgz - файлы-пакеты, сформированные для отправки
                               на удаленный узел, но еще не отправленные


Содержимое файла-пакета
-----------------------

 ----------------------------------------------------------------
                    Уровень безопасности пакета
 ----------------------------------------------------------------
          0           |          1          |          2
 ----------------------------------------------------------------
 пакет без защиты     | подписанный пакет   | зашифрованный пакет
 ----------------------------------------------------------------
 packet.info            packet.info           packet.info
 Owner_TableName1.dat   packet.info.sig       packet.info.sig
 Owner_TableName1.del   packet.data           packet.data.enc
 Owner_TableName2.dat   packet.data.sig       packet.data.sig
 Owner_TableName2.del

 packet.info      - Служебная информация о пакете
 packet.info.sig  - Подпись файла packet.info
 packet.data      - Данные пакета
 packet.data.enc  - Данные пакета в зашифрованном виде
 packet.data.sig  - Подпись файла packet.data

 Содержимое файла packet.data (файл в формате tgz):

   Owner_TableName1.dat - Добавленные и измененные записи таблицы TableName1
   Owner_TableName1.del - Стертые записи из таблицы TableName1
   Owner_TableName2.dat - Добавленные и измененные записи таблицы TableName2
   Owner_TableName2.del - Стертые записи из таблицы TableName2
   ....


Шаги по установке
-----------------

1. Распаковать инсталляционый файл при помощи команды
     zcat sync.tgz | tar x

2. Добавить пользователя sync в /etc/passwd:
     sync::3:3:Synchronization System:/home/sync:/bin/sh

3. Добавить группу sync в /etc/group:
     sync::3:sync

4. Определить имя локального узла (значение переменной NODENAME в
   etc/sync.conf)

5. Установить систему в базе данных (будут созданы служебные таблицы):
     syncctl system install

6. Добавить в систему удаленные узлы: syncctl node add <имя удаленного узла>

7. Указать записи каких таблиц будут тиражироваться на удаленные узлы:
     syncctl table add <имя таблицы>

8. Указать индивидуально для каждого узла какие таблицы и с какими
   ограничениями будут тиражироваться на удаленные узлы:
     см. описание в файле nodeconf


Ограничения системы и налагаемые условия
на среду выполнения
-------------------

* Система не будет замечать изменения в записях, если при этом прямо
  модифицируется значение служебного поля Packet или InitPacket.

* Система не будет замечать удаления записей, если значение служебного
  поля InitPacket равно 0.

* Система при синхронизации оперирует только общими полями, входящими
  в таблицу на обеих сторонах. Существует несколько ограничений этого
  правила:

    * Ключевые поля таблицы на принимающей стороне должны обязательно
      присутствовать в таблице на отсылаемой стороне (не обязательно,
      как ключевые и не обязательно как реальные).

    * Не могут синхронизироваться таблицы, состоящие только из
      ключевых полей.

    * Не могут синхронизироваться таблицы, в которых есть поля типов
      'long varchar' и 'long binary'. Это связано с тем, что в их
      именах используется пробел. Также не определено поведение системы
      в случае наличия полей типа user-defined.

* У синхронизируемой таблицы должен обязательно определен первичный
  ключ, причем на обеих сторонах обмена.

* Система должна работать на том компьютере, на котором запущен
  сервер баз данных, если это SQL Anywhere. Это связано с
  особенностью реализации обновления данных: используется
  команда load, которая требует нахождения файлов данных
  на компьютере, где запущен db engine.

* Система должна устанавливаться в базу данных только под одним
  пользователем.

* Предполагается, что программа $SQL_EXEC возвращает код возврата,
  указывающий на успешность выполнения SQL-выражения.

* Предполагается уникальность имени служебного поля (Packet) во
  всех таблицах базы данных. Другими словами, если у таблицы
  имеется поле Packet, то однозначно предполагается, что данные
  этой таблицы тиражируются на удаленные узлы.

* Служебными полями считаются поля, названия которых начинается с 'pkt_'.

* Имя удаленного узла не может содержать пробелов и знаков
  подчеркивания.

* Имя удаленного узла не может быть "default", так как это ключевое
  слово используется в конфигурационном файле nodes.sec.

* Имя владельца таблицы не может содержать символ '_'.
